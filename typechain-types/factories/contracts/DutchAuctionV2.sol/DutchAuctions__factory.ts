/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DutchAuctions,
  DutchAuctionsInterface,
} from "../../../contracts/DutchAuctionV2.sol/DutchAuctions";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20TokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_erc721TokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_nftTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reservePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numBlocksAuctionOpen",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_offerPriceDecrement",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "erc20TokenAddress",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc721TokenAddress",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finalize",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "nftTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nop",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161076b38038061076b833981810160405281019061003291906101bb565b85600760026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600981905550826002819055508160038190555080600481905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555043600581905550505050505050610248565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061015282610127565b9050919050565b61016281610147565b811461016d57600080fd5b50565b60008151905061017f81610159565b92915050565b6000819050919050565b61019881610185565b81146101a357600080fd5b50565b6000815190506101b58161018f565b92915050565b60008060008060008060c087890312156101d8576101d7610122565b5b60006101e689828a01610170565b96505060206101f789828a01610170565b955050604061020889828a016101a6565b945050606061021989828a016101a6565b935050608061022a89828a016101a6565b92505060a061023b89828a016101a6565b9150509295509295509295565b610514806102576000396000f3fe60806040526004361061004a5760003560e01c80632e9c58bb1461004f5780634bb278f31461007a5780637e83057414610084578063df241cb9146100af578063f835cd3c146100da575b600080fd5b34801561005b57600080fd5b50610064610105565b6040516100719190610340565b60405180910390f35b61008261010e565b005b34801561009057600080fd5b506100996102d3565b6040516100a69190610374565b60405180910390f35b3480156100bb57600080fd5b506100c46102d9565b6040516100d1919061040e565b60405180910390f35b3480156100e657600080fd5b506100ef6102ff565b6040516100fc919061044a565b60405180910390f35b60006001905090565b600760009054906101000a900460ff1680156101375750600760019054906101000a900460ff16155b61014057600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461019a57600080fd5b6001600760016101000a81548160ff02191690831515021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6006549081150290604051600060405180830381858888f1935050505015801561021d573d6000803e3d6000fd5b50600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336009546040518463ffffffff1660e01b815260040161029f939291906104a7565b600060405180830381600087803b1580156102b957600080fd5b505af11580156102cd573d6000803e3d6000fd5b50505050565b60095481565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008115159050919050565b61033a81610325565b82525050565b60006020820190506103556000830184610331565b92915050565b6000819050919050565b61036e8161035b565b82525050565b60006020820190506103896000830184610365565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006103d46103cf6103ca8461038f565b6103af565b61038f565b9050919050565b60006103e6826103b9565b9050919050565b60006103f8826103db565b9050919050565b610408816103ed565b82525050565b600060208201905061042360008301846103ff565b92915050565b6000610434826103db565b9050919050565b61044481610429565b82525050565b600060208201905061045f600083018461043b565b92915050565b6000610470826103db565b9050919050565b61048081610465565b82525050565b60006104918261038f565b9050919050565b6104a181610486565b82525050565b60006060820190506104bc6000830186610477565b6104c96020830185610498565b6104d66040830184610365565b94935050505056fea264697066735822122043a40a085ca0db9ee4061a998280b93632c072bdff7e0e5a89be2e71483ff86c64736f6c634300080a0033";

type DutchAuctionsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DutchAuctionsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DutchAuctions__factory extends ContractFactory {
  constructor(...args: DutchAuctionsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _erc20TokenAddress: PromiseOrValue<string>,
    _erc721TokenAddress: PromiseOrValue<string>,
    _nftTokenId: PromiseOrValue<BigNumberish>,
    _reservePrice: PromiseOrValue<BigNumberish>,
    _numBlocksAuctionOpen: PromiseOrValue<BigNumberish>,
    _offerPriceDecrement: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DutchAuctions> {
    return super.deploy(
      _erc20TokenAddress,
      _erc721TokenAddress,
      _nftTokenId,
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    ) as Promise<DutchAuctions>;
  }
  override getDeployTransaction(
    _erc20TokenAddress: PromiseOrValue<string>,
    _erc721TokenAddress: PromiseOrValue<string>,
    _nftTokenId: PromiseOrValue<BigNumberish>,
    _reservePrice: PromiseOrValue<BigNumberish>,
    _numBlocksAuctionOpen: PromiseOrValue<BigNumberish>,
    _offerPriceDecrement: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _erc20TokenAddress,
      _erc721TokenAddress,
      _nftTokenId,
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    );
  }
  override attach(address: string): DutchAuctions {
    return super.attach(address) as DutchAuctions;
  }
  override connect(signer: Signer): DutchAuctions__factory {
    return super.connect(signer) as DutchAuctions__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DutchAuctionsInterface {
    return new utils.Interface(_abi) as DutchAuctionsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DutchAuctions {
    return new Contract(address, _abi, signerOrProvider) as DutchAuctions;
  }
}
