/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  DutchAuctions,
  DutchAuctionsInterface,
} from "../../contracts/DutchAuctions";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20TokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_erc721TokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_nftTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reservePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numBlocksAuctionOpen",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_offerPriceDecrement",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "bid",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20TokenAddress",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc721TokenAddress",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finalize",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAddressOfOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNounceValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumBlocksOpen",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOfferPriceDecrement",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReservePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWinnerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nop",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "refundAmount",
        type: "uint256",
      },
    ],
    name: "refund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200105a3803806200105a8339818101604052810190620000379190620001cd565b85600760026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600981905550826002819055508160038190555080600481905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055504360058190555050505050505062000269565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200015a826200012d565b9050919050565b6200016c816200014d565b81146200017857600080fd5b50565b6000815190506200018c8162000161565b92915050565b6000819050919050565b620001a78162000192565b8114620001b357600080fd5b50565b600081519050620001c7816200019c565b92915050565b60008060008060008060c08789031215620001ed57620001ec62000128565b5b6000620001fd89828a016200017b565b96505060206200021089828a016200017b565b95505060406200022389828a01620001b6565b94505060606200023689828a01620001b6565b93505060806200024989828a01620001b6565b92505060a06200025c89828a01620001b6565b9150509295509295509295565b610de180620002796000396000f3fe6080604052600436106100dd5760003560e01c80637e8305741161007f578063c54bfb6811610059578063c54bfb6814610251578063df241cb91461027c578063f0722322146102a7578063f835cd3c146102d2576100dd565b80637e830574146101d057806385d260fa146101fb57806398d5fdca14610226576100dd565b80632e9c58bb116100bb5780632e9c58bb14610154578063454a2ab31461017f5780634bb278f31461019b5780637270c043146101a5576100dd565b806310a37c26146100e2578063278ecde11461010d5780632c588a7614610129575b600080fd5b3480156100ee57600080fd5b506100f76102fd565b604051610104919061094b565b60405180910390f35b610127600480360381019061012291906109a1565b610327565b005b34801561013557600080fd5b5061013e6103e0565b60405161014b91906109dd565b60405180910390f35b34801561016057600080fd5b506101696103ea565b6040516101769190610a13565b60405180910390f35b610199600480360381019061019491906109a1565b6103f3565b005b6101a361071e565b005b3480156101b157600080fd5b506101ba610830565b6040516101c791906109dd565b60405180910390f35b3480156101dc57600080fd5b506101e561083a565b6040516101f291906109dd565b60405180910390f35b34801561020757600080fd5b50610210610840565b60405161021d919061094b565b60405180910390f35b34801561023257600080fd5b5061023b610869565b60405161024891906109dd565b60405180910390f35b34801561025d57600080fd5b506102666108aa565b60405161027391906109dd565b60405180910390f35b34801561028857600080fd5b506102916108b4565b60405161029e9190610a8d565b60405180910390f35b3480156102b357600080fd5b506102bc6108da565b6040516102c991906109dd565b60405180910390f35b3480156102de57600080fd5b506102e76108e4565b6040516102f49190610ac9565b60405180910390f35b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600760009054906101000a900460ff1680156103505750600760019054906101000a900460ff16155b61035957600080fd5b6001600760016101000a81548160ff021916908315150217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156103dc573d6000803e3d6000fd5b5050565b6000600354905090565b60006001905090565b600760009054906101000a900460ff161561040d57600080fd5b60035460055461041d9190610b13565b431061042857600080fd5b436003546005546104399190610b13565b6104439190610b69565b6004546104509190610b9d565b60025461045d9190610b13565b81101561049f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049690610c7a565b60405180910390fd5b6001600760006101000a81548160ff02191690831515021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600681905550600760029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff1660e01b815260040161055f929190610c9a565b6020604051808303816000875af115801561057e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a29190610cef565b50600760029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161060293929190610d1c565b6020604051808303816000875af1158015610621573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106459190610cef565b50600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166009546040518463ffffffff1660e01b81526004016106e993929190610d74565b600060405180830381600087803b15801561070357600080fd5b505af1158015610717573d6000803e3d6000fd5b5050505050565b600760009054906101000a900460ff1680156107475750600760019054906101000a900460ff16155b61075057600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107aa57600080fd5b6001600760016101000a81548160ff02191690831515021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6006549081150290604051600060405180830381858888f1935050505015801561082d573d6000803e3d6000fd5b50565b6000600954905090565b60095481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000804360035460055461087d9190610b13565b6108879190610b69565b6004546108949190610b9d565b6002546108a19190610b13565b90508091505090565b6000600454905090565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600254905090565b600760029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109358261090a565b9050919050565b6109458161092a565b82525050565b6000602082019050610960600083018461093c565b92915050565b600080fd5b6000819050919050565b61097e8161096b565b811461098957600080fd5b50565b60008135905061099b81610975565b92915050565b6000602082840312156109b7576109b6610966565b5b60006109c58482850161098c565b91505092915050565b6109d78161096b565b82525050565b60006020820190506109f260008301846109ce565b92915050565b60008115159050919050565b610a0d816109f8565b82525050565b6000602082019050610a286000830184610a04565b92915050565b6000819050919050565b6000610a53610a4e610a498461090a565b610a2e565b61090a565b9050919050565b6000610a6582610a38565b9050919050565b6000610a7782610a5a565b9050919050565b610a8781610a6c565b82525050565b6000602082019050610aa26000830184610a7e565b92915050565b6000610ab382610a5a565b9050919050565b610ac381610aa8565b82525050565b6000602082019050610ade6000830184610aba565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b1e8261096b565b9150610b298361096b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b5e57610b5d610ae4565b5b828201905092915050565b6000610b748261096b565b9150610b7f8361096b565b925082821015610b9257610b91610ae4565b5b828203905092915050565b6000610ba88261096b565b9150610bb38361096b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bec57610beb610ae4565b5b828202905092915050565b600082825260208201905092915050565b7f416d6f756e74206f66206574682073656e74206973206c657373207468616e2060008201527f746865207072696365206f662074686520746f6b656e00000000000000000000602082015250565b6000610c64603683610bf7565b9150610c6f82610c08565b604082019050919050565b60006020820190508181036000830152610c9381610c57565b9050919050565b6000604082019050610caf600083018561093c565b610cbc60208301846109ce565b9392505050565b610ccc816109f8565b8114610cd757600080fd5b50565b600081519050610ce981610cc3565b92915050565b600060208284031215610d0557610d04610966565b5b6000610d1384828501610cda565b91505092915050565b6000606082019050610d31600083018661093c565b610d3e602083018561093c565b610d4b60408301846109ce565b949350505050565b6000610d5e82610a5a565b9050919050565b610d6e81610d53565b82525050565b6000606082019050610d896000830186610d65565b610d966020830185610d65565b610da360408301846109ce565b94935050505056fea26469706673582212203f372846471e4c1b4ea8201b0d0367b8973e668dadb78a50b1b21e69068c297764736f6c634300080a0033";

type DutchAuctionsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DutchAuctionsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DutchAuctions__factory extends ContractFactory {
  constructor(...args: DutchAuctionsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _erc20TokenAddress: PromiseOrValue<string>,
    _erc721TokenAddress: PromiseOrValue<string>,
    _nftTokenId: PromiseOrValue<BigNumberish>,
    _reservePrice: PromiseOrValue<BigNumberish>,
    _numBlocksAuctionOpen: PromiseOrValue<BigNumberish>,
    _offerPriceDecrement: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DutchAuctions> {
    return super.deploy(
      _erc20TokenAddress,
      _erc721TokenAddress,
      _nftTokenId,
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    ) as Promise<DutchAuctions>;
  }
  override getDeployTransaction(
    _erc20TokenAddress: PromiseOrValue<string>,
    _erc721TokenAddress: PromiseOrValue<string>,
    _nftTokenId: PromiseOrValue<BigNumberish>,
    _reservePrice: PromiseOrValue<BigNumberish>,
    _numBlocksAuctionOpen: PromiseOrValue<BigNumberish>,
    _offerPriceDecrement: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _erc20TokenAddress,
      _erc721TokenAddress,
      _nftTokenId,
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    );
  }
  override attach(address: string): DutchAuctions {
    return super.attach(address) as DutchAuctions;
  }
  override connect(signer: Signer): DutchAuctions__factory {
    return super.connect(signer) as DutchAuctions__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DutchAuctionsInterface {
    return new utils.Interface(_abi) as DutchAuctionsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DutchAuctions {
    return new Contract(address, _abi, signerOrProvider) as DutchAuctions;
  }
}
